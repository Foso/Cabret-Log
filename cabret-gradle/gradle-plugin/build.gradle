buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'com.gradle.plugin-publish' version '0.11.0'
    id 'signing'


}
apply plugin: "java-gradle-plugin"
apply plugin: "kotlin-kapt"
apply plugin: "maven"
apply plugin: 'com.bmuschko.nexus'


group = "de.jensklingenberg.cabret"
archivesBaseName = "cabret-gradle"
version = "1.0.0"



install {
    repositories.mavenInstaller {
        pom.artifactId = archivesBaseName
    }
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = "de.jensklingenberg.cabret" // users will do `apply plugin: "de.jensklingenberg.cabret"`
            implementationClass = "de.jensklingenberg.gradle.CabretGradleSubplugin" // entry-point class
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-gradle-plugin-api:1.4.21"

}

pluginBundle {
    website = 'https://github.com/Foso/Cabret-Log'
    vcsUrl = 'https://github.com/Foso/Cabret-Log.git'
    tags = ['kotlin', 'logging']

    plugins {
        simplePlugin {
            id = "de.jensklingenberg.cabret" // users will do `apply plugin: "de.jensklingenberg.cabret"`
            // id is captured from java-gradle-plugin configuration
            displayName = 'Cabret Gradle Plugin'
            description = 'Plugin for annotation-triggered method call logging'
        }
    }
}




build.finalizedBy(install)



modifyPom {
    project {
        name 'CabretGradle'
        description 'Gradle Plugin for Cabret-Log'
        url 'https://github.com/Foso/Cabret-Log'
        inceptionYear '2020'
        scm {
            url 'https://github.com/Foso/Cabret-Log'
            connection 'scm:https://github.com/Foso/Cabret-Log.git'
            developerConnection 'scm:git://github.com/Foso/Cabret-Log.git'
        }
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'Foso'
                name 'Jens Klingenberg'
                email 'mail@jensklingenberg.de'
            }
        }
    }
}
extraArchive {
    sources = true
    tests = true
    javadoc = true
}
nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

nexusStaging {
    packageGroup = "de.jensklingenberg" //optional if packageGroup == project.getGroup()
    stagingProfileId = "d56228753311b0" //when not defined will be got from server using "packageGroup"
}